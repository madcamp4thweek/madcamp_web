/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, Suspense, useState } from 'react'
import { useGLTF,Html } from '@react-three/drei'
import { Canvas, useFrame } from '@react-three/fiber'
import * as THREE from 'three'
import {useSpring, animated} from '@react-spring/three'
import Screen from './Screen'

export default function Model(props) {
  const vec = new THREE.Vector3()
  const group = useRef()
  const { nodes, materials } = useGLTF('etc/mac-draco.gltf');


  const open = props.open;
  const setOpen = props.setOpen;

  const { rotate, position} = useSpring({ rotate:open?-0.02:Math.PI/2-0.01, position :open?[0,0,-6]:[0,0,-4.5] });

  useFrame((state)=>{

    state.camera.position.lerp(vec.set(0, open?-50:-60,open?0.01:0.01),0.1);
    state.camera.lookAt(0,0,0);

  });

  //position={[-1.58, open?9.21:7.5, open?-0.2:-1.8]}
  return (
      <animated.group onClick={()=>setOpen(!open)} ref={group} {...props} dispose={null} rotation={[Math.PI/2,0,0]} position={position}>
        <animated.group  rotation-x={rotate} >
          <group position={[0, 7.51, -0.2]}>
            <mesh geometry={nodes.Cube008.geometry} material={nodes.Cube008.material} />
            <mesh geometry={nodes.Cube008_1.geometry} material={materials['matte.001']} />
            <mesh geometry={nodes.Cube008_2.geometry}>
              <meshStandardMaterial attach="material" color="black" />
              {open&&
                <Html className="ScreenContent" rotation-x={Math.PI} rotation-y={-Math.PI} rotation-z={Math.PI} position={[0.15, 1.2, 0.01]} transform >
                  <div className="ContentWrapper" >
                      <Screen setOpen={setOpen}/>
                  </div>
                </Html>
              }
            </mesh>
          </group>
        </animated.group>
        <mesh geometry={nodes.keyboard.geometry} material={materials.keys} position={[0.32, 0.2, 5.86]} />
        <group position={[0.23, 0.15, 10.43]}>
          <mesh geometry={nodes.Cube002.geometry} material={nodes.Cube002.material} />
          <mesh geometry={nodes.Cube002_1.geometry} material={materials.trackpad} />
        </group>
        <mesh geometry={nodes.touchbar.geometry} material={materials.touchbar} position={[0.16, 0.11, 2.28]} />
      </animated.group>

  )
}

useGLTF.preload('/mac-draco.gltf')
